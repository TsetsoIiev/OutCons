@model IndexModel

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center">
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <div class="container">
                    @using (Html.BeginForm())
                    {
                        <div class="input-group mb-3">
                            <input id="SearchText" name="SearchText" type="text" class="form-control" placeholder="Filter" value="@ViewData["CurrentFilter"]">
                            <div class="input-group-append">
                                <input class="btn btn-outline-secondary" type="submit" value="Search">
                            </div>
                        </div>
                    }

                    <table class="table table-dark">
                        <thead>
                        <tr>
                            <th scope="col">#</th>
                            <th scope="col">@Html.ActionLink("First Name", "Index", new {sortOrder = ViewData["FirstNameSortParam"]})</th>
                            <th scope="col">@Html.ActionLink("Last Name", "Index", new {sortOrder = ViewData[" LastNameSortParam"]})</th>
                            <th scope="col">@Html.ActionLink("Email", "Index", new {sortOrder = ViewData["EmailSortParam"]})</th>
                            <th scope="col">#</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var user in Model.Users)
                        {
                            <tr>
                                <td>@user.Id</td>
                                <td>@user.FirstName</td>
                                <td>@user.LastName</td>
                                <td>@user.Email</td>
                                <td>
                                    @Html.ActionLink("View project hours", "ViewProjectHours", "Home", new {userId = @user.Id})
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>

                    @{
                        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
                        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
                    }

                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="btn btn-default @prevDisabled">
                        Previous
                    </a>
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-currentFilter="@ViewData["CurrentFilter"]"
                       class="btn btn-default @nextDisabled">
                        Next
                    </a>

                </div>
            </div>
            <div class="col">
                <div class="row">
                    <div class="container">
                        <form>
                            
        <button type="button" class="btn btn-primary" onclick="refreshDatabase()">Refresh Database</button>
                            <div class="form-check">
                                <input value="person" class="form-check-input" type="radio" name="chartFilter" id="personChartFilter" onchange="applyFilter('person')">
                                <label class="form-check-label" for="personChartFilter">
                                    Per Person
                                </label>
                            </div>
                            <div class="form-check">
                                <input value="project" class="form-check-input" type="radio" name="chartFilter" id="projectChartFilter" onchange="applyFilter('project')">
                                <label class="form-check-label" for="projectChartFilter">
                                    Per Project
                                </label>
                            </div>
                        </form>
                    </div>
                    <div class="row">
                        <div id="chart_div"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js" integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=" crossorigin="anonymous"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script type="text/javascript">
      google.charts.load('current', {'packages':['corechart']});
      //google.charts.setOnLoadCallback(drawChart);
          
          function applyFilter(filter) {
               $.get(`/Home/GetMostActiveUsers/?filter=${filter}`, (res) => {
                                          drawChart(res);
                                      });
          }
      
      function drawChart(res) {
          var data = new google.visualization.DataTable();
          data.addColumn('number', 'Filter');
          data.addColumn('number', 'Hours');
     
          data.addRows(res.map(x => [x.filteredById, x.totalHours]));

        const options = {
            'title':'Most active users', 
                'width': 400,
                'height': 1000
            };

        var chart = new google.visualization.BarChart(document.getElementById('chart_div'));
        chart.draw(data, options);
      }
      
      function refreshDatabase() {
              $.post( '/Home/RefreshDatabase', () => {
                location.reload();  
                return false;
              });  
          }
    </script>